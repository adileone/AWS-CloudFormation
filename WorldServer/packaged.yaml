AWSTemplateFormatVersion: '2010-09-09'
Description: 'WorldServer infrastructure

  '
Parameters:
  VpcCidrBlock:
    Type: String
    Default: 10.44.124.0/23
    AllowedPattern: ((\d{1,3})\.){3}\d{1,3}/\d{1,2}
    Description: CIDR block for the WorldServer VPC
Resources:
  WorldServerVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock:
        Ref: VpcCidrBlock
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
      - Key: Name
        Value: WorldServerVPC
  WorldServerSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: WorldServerVPC
      CidrBlock:
        Fn::Select:
        - 0
        - Fn::Cidr:
          - Ref: VpcCidrBlock
          - 3
          - 7
      AvailabilityZone:
        Fn::Select:
        - 0
        - Fn::GetAZs:
            Ref: AWS::Region
      Tags:
      - Key: Name
        Value:
          Fn::Sub: WorldServerSubnet1
  WorldServerSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: WorldServerVPC
      CidrBlock:
        Fn::Select:
        - 1
        - Fn::Cidr:
          - Ref: VpcCidrBlock
          - 3
          - 7
      AvailabilityZone:
        Fn::Select:
        - 1
        - Fn::GetAZs:
            Ref: AWS::Region
      Tags:
      - Key: Name
        Value:
          Fn::Sub: WorldServerSubnet2
  WorldServerSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: WorldServerVPC
      CidrBlock:
        Fn::Select:
        - 2
        - Fn::Cidr:
          - Ref: VpcCidrBlock
          - 3
          - 7
      AvailabilityZone:
        Fn::Select:
        - 2
        - Fn::GetAZs:
            Ref: AWS::Region
      Tags:
      - Key: Name
        Value:
          Fn::Sub: WorldServerSubnet3
  WorldServerFSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId:
        Ref: WorldServerVPC
      GroupName: WorldServerFSSecurityGroup
      GroupDescription: Security group controlling the inbound traffic to the WorldServer
        FileSystem
      SecurityGroupIngress:
      - FromPort: '0'
        ToPort: '0'
        IpProtocol: '-1'
        CidrIp: 0.0.0.0/0
  WorldServerInternetGateway:
    Type: AWS::EC2::InternetGateway
    DependsOn: WorldServerVPC
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: WorldServerVPC
      InternetGatewayId:
        Ref: WorldServerInternetGateway
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: WorldServerVPC
  PublicRoute1:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: WorldServerInternetGateway
  WorldServerSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: WorldServerSubnet1
      RouteTableId:
        Ref: PublicRouteTable
  WorldServerSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: WorldServerSubnet2
      RouteTableId:
        Ref: PublicRouteTable
  WorldServerSubnet3RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: WorldServerSubnet3
      RouteTableId:
        Ref: PublicRouteTable
  EC2SSMRoleASG:
    Type: AWS::IAM::Role
    Properties:
      RoleName: EC2SSMRole-ASG
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/AmazonEC2FullAccess
      PermissionsBoundary: arn:aws:iam::770725503646:policy/WIPO-PermissionsBoundary
  RoleInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: EC2-SSM-InstanceProfile
      Path: /
      Roles:
      - Ref: EC2SSMRoleASG
  DomainJoinPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: AmazonEC2RoleforSSM-ASGDomainJoin
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - ssm:DescribeAssociation
          - ssm:ListAssociations
          - ssm:GetDocument
          - ssm:UpdateAssociationStatus
          - ssm:UpdateInstanceInformation
          - ssm:CreateAssociation
          Resource: '*'
      Roles:
      - Ref: EC2SSMRoleASG
  ASGStack1:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.eu-central-1.amazonaws.com/alessandrotestbucket/fd40858a0451b299ea20fb4cbe60a238.template
      Parameters:
        RoleInstanceProfile:
          Fn::GetAtt:
          - RoleInstanceProfile
          - Arn
        Sub1:
          Ref: WorldServerSubnet1
        Sub2:
          Ref: WorldServerSubnet2
        Sub3:
          Ref: WorldServerSubnet3
        SecGroup:
          Ref: WorldServerFSSecurityGroup
        Vpc:
          Ref: WorldServerVPC
